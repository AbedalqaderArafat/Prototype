import java.awt.*;
import java.awt.event.*;
import java.io.*;
import java.util.*;
import javax.swing.*;
import javax.swing.border.*;
import javax.swing.event.*;
import java.awt.Image;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Iterator;
import javax.imageio.ImageIO;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

public class Search2 extends JFrame implements ListSelectionListener, ActionListener {
    private JList<Book> bookList;
    private JScrollPane bookScroll;
    private JButton searchButton;
    private JTextField searchField;
    private ArrayList<Book> bookData;

    public Search2() {
        super("Book List");
        
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);
        setSize(800, 600);

        // Load book data from Excel sheet
        bookData = loadBookData();

        // Create book list and add to scroll pane
        bookList = new JList<Book>(new DefaultListModel<Book>());
        bookList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        bookList.addListSelectionListener(this);
        bookScroll = new JScrollPane(bookList);
        bookScroll.setBounds(26, 394, 1846, 621);
        getContentPane().add(bookScroll);

        // Create search field and button
        searchField = new JTextField();
        searchField.setBounds(26, 331, 1322, 52);
        getContentPane().add(searchField);
        searchButton = new JButton("Search");
        searchButton.setBounds(1358, 331, 513, 52);
        searchButton.addActionListener(this);
        getContentPane().add(searchButton);
        getContentPane().setLayout(null);
		ImageIcon Icon = new ImageIcon("KUSTAR_Logo.jpg");
		Image image = Icon.getImage().getScaledInstance(1904, 315, Image.SCALE_SMOOTH);
	    ImageIcon newIcon = new ImageIcon(image);
		JLabel Logo = new JLabel(newIcon);
		Logo.setBounds(0, 0, 1904, 275);
		getContentPane().add(Logo);
		addBookToList(null);
        setVisible(true);
        Dimension screenDim = Toolkit.getDefaultToolkit().getScreenSize();

        setSize(1920, 1080);

        setLocation(screenDim.width/2 - getWidth()/2, screenDim.height/2 - getHeight()/2);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    }

    // Load book data from Excel sheet
    private ArrayList<Book> loadBookData() {
        ArrayList<Book> books = new ArrayList<>();
        try {
            FileInputStream excelFile = new FileInputStream(new File("Books.xlsx"));
            XSSFWorkbook workbook = new XSSFWorkbook(excelFile);
            Sheet sheet = workbook.getSheetAt(0);
            Iterator<Row> rowIterator = sheet.iterator();
            // Skip first row
            rowIterator.next();
            while (rowIterator.hasNext()) {
                Row row = rowIterator.next();
                Cell nameCell = row.getCell(0);
                Cell imageCell = row.getCell(1);
                Cell descriptionCell = row.getCell(2);
                Cell rentalCountCell = row.getCell(5);
                Cell maxRentalCountCell = row.getCell(4);
                Cell statusCell = row.getCell(3);
                String name = nameCell.getStringCellValue();
                String imageName = imageCell.getStringCellValue();
                String imagePath = "BookImages/" + imageName;
                File imageFile = new File(imagePath);
                Image image = ImageIO.read(imageFile);
                String description = descriptionCell.getStringCellValue();
                int rentalCount = (int) rentalCountCell.getNumericCellValue();
                int maxRentalCount = (int) maxRentalCountCell.getNumericCellValue();
                int counterValue = rentalCount;
                String status = statusCell.getStringCellValue();
                // Only change status if counter value exceeds x
                if (counterValue > 10) {
                    if (status.equals("available")) {
                        statusCell.setCellValue("Rented Out");
                    } else if (status.equals("Rented Out")) {
                        statusCell.setCellValue("available");
                    }
                }
                Book book = new Book(name, image, description, rentalCount, maxRentalCount);
                books.add(book);
            }
            workbook.close();
            excelFile.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
        return books;
    }

    
    private void addBookToList(Book book) {
        DefaultListModel<Book> model = (DefaultListModel<Book>)bookList.getModel();
        model.addElement(book);
    }

    // Update book list based on search field text
    private void updateBookList(String searchText) {
        DefaultListModel<Book> model = (DefaultListModel<Book>)bookList.getModel();
        model.clear();
        for (Book book : bookData) {
            if (book.getName().toLowerCase().contains(searchText.toLowerCase())) {
                addBookToList(book);
            }
        }
        bookList.setSelectedIndex(0);
    

    bookList.addMouseListener(new MouseAdapter() {
        public void mouseClicked(MouseEvent event) {
            if (event.getClickCount() == 2) {
                int index = bookList.getSelectedIndex();
                if (index != -1) {
                    Book book = (Book)bookList.getSelectedValue();
                    // Display book information in popup dialog
                    int result = JOptionPane.showConfirmDialog(Search2.this, "Do you want to rent " + book.getName() + "?");
                    if (result == JOptionPane.YES_OPTION) {
                        // Code to rent book
                    }
                }
            }
        }
    });}

    // Handle search button click
    public void actionPerformed(ActionEvent event) {
        if (event.getSource() == searchButton) {
            updateBookList(searchField.getText());
        }
    }

    public static void main(String[] args) {
        new Search2();
    }

	@Override
	public void valueChanged(ListSelectionEvent e) {
		// TODO Auto-generated method stub
		
	}
}

