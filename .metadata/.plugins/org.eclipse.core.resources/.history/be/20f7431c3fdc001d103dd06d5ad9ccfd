import java.io.FileInputStream;
import java.io.IOException;

import javax.swing.JFrame;

import javafx.application.Application;
import javafx.geometry.Orientation;
import javafx.scene.Scene;
import javafx.scene.control.ScrollPane;
import javafx.scene.layout.FlowPane;
import javafx.stage.Stage;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.WorkbookFactory;

public class ExcelScrollPane extends JFrame {
    
    private static final int CELL_WIDTH = 120; // width of each cell in the scroll pane
    
    @Override
    public void start(Stage primaryStage) {
        // read the Excel sheet
        Sheet sheet = null;
        try (FileInputStream inputStream = new FileInputStream("data.xlsx")) {
            Workbook workbook = WorkbookFactory.create(inputStream);
            sheet = workbook.getSheetAt(0);
        } catch (IOException e) {
            e.printStackTrace();
            System.exit(1);
        }
        
        // create a flow pane to hold the cells
        FlowPane flowPane = new FlowPane(Orientation.HORIZONTAL, 10, 10);
        flowPane.setPrefWrapLength(CELL_WIDTH * sheet.getRow(0).getLastCellNum()); // set the width of the flow pane
        
        // populate the flow pane with cells
        for (Row row : sheet) {
            for (Cell cell : row) {
                flowPane.getChildren().add(new CellPane(cell, CELL_WIDTH));
            }
        }
        
        // create a scroll pane to hold the flow pane horizontally
        ScrollPane scrollPane = new ScrollPane(flowPane);
        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);
        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);
        
        // create the scene and show the stage
        Scene scene = new Scene(scrollPane);
        primaryStage.setScene(scene);
        primaryStage.setTitle("Excel ScrollPane");
        primaryStage.show();
    }
    
    // a custom pane to display a cell's value
    private class CellPane extends FlowPane {
        public CellPane(Cell cell, double width) {
            super(Orientation.VERTICAL);
            setPrefSize(width, 50);
            setStyle("-fx-border-color: black; -fx-border-width: 1px;");
            String value = cell.toString();
            getChildren().add(new javafx.scene.control.Label(value));
        }
    }
    
    public static void main(String[] args) {
        launch(args);
    }
}